<?php
/**
 * @package TE Override
 * @version 1.0
 */
/*
Plugin Name: F&B Menus
Plugin URI: https://bellaworksweb.com
Description: Food and Beverage Menu generators.
Author: Austin Crane
Version: 1.0
Author URI: https://bellaworksweb.com
*/

/**
 *   Bring in the Styles
 * 
*/
// remove random autogenerated p tags in shortcode
remove_filter('the_content', 'wpautop');
add_filter('the_content', 'wpautop', 12);

// loads the stylesheet
add_action('wp_enqueue_scripts', 'wwc_food_style');
function wwc_food_style() {
	wp_register_style( 'wwc-food-styles',  plugin_dir_url( __FILE__ ) . 'wwc-food-styles.css' );
    wp_enqueue_style( 'wwc-food-styles' );
}
/**
 *  
 *  Create the Menu Post Type
*/

add_action('init', 'fnb_custom_menus');
function fnb_custom_menus() 
{
	
	$labels = array(
	'name' => _x('F&B Menus', 'post type general name'),
    'singular_name' => _x('F&B Menu', 'post type singular name'),
    'add_new' => _x('Add New', 'F&B Menu'),
    'add_new_item' => __('Add New F&B Menu'),
    'edit_item' => __('Edit F&B Menu'),
    'new_item' => __('New F&B Menu'),
    'view_item' => __('View F&B Menu'),
    'search_items' => __('Search F&B Menu'),
    'not_found' =>  __('No F&B Menu found'),
    'not_found_in_trash' => __('No F&B Menu found in Trash'), 
    'parent_item_colon' => '',
    'menu_name' => 'F&B Menus'
  );
  $args = array(
	'labels' => $labels,
    'public' => true,
    'publicly_queryable' => true,
    'show_ui' => true, 
    'show_in_menu' => true, 
    'query_var' => true,
    'rewrite' => true,
    'capability_type' => 'post',
    'has_archive' => false, 
    'hierarchical' => false, // 'false' acts like posts 'true' acts like pages
    'menu_position' => 20,
    'supports' => array('title','editor','custom-fields','thumbnail'),
	
  ); 
  register_post_type('food_menus',$args); // name used in query

  // If we ever need a print url without headers and footers
  
 //  $labels = array(
	// 'name' => _x('Print', 'post type general name'),
 //    'singular_name' => _x('Print', 'post type singular name'),
 //    'add_new' => _x('Add New', 'Print'),
 //    'add_new_item' => __('Add New F&B Menu'),
 //    'edit_item' => __('Edit Print'),
 //    'new_item' => __('New Print'),
 //    'view_item' => __('View Print'),
 //    'search_items' => __('Search Print'),
 //    'not_found' =>  __('No Print found'),
 //    'not_found_in_trash' => __('No Print found in Trash'), 
 //    'parent_item_colon' => '',
 //    'menu_name' => 'Print'
 //  );
 //  $args = array(
	// 'labels' => $labels,
 //    'public' => true,
 //    'publicly_queryable' => true,
 //    'show_ui' => true, 
 //    'show_in_menu' => true, 
 //    'query_var' => true,
 //    'rewrite' => true,
 //    'capability_type' => 'post',
 //    'has_archive' => false, 
 //    'hierarchical' => false, // 'false' acts like posts 'true' acts like pages
 //    'menu_position' => 20,
 //    'supports' => array('title','editor','custom-fields','thumbnail'),
	
 //  ); 
 //  register_post_type('print_menus',$args); // name used in query
} // close custom post type

/*
##############################################
	Custom Taxonomies Controls Food location and shortcode
*/
add_action( 'init', 'build_fnb_tax', 0 );
 
function build_fnb_tax() {
// cusotm tax
    register_taxonomy( 'fnb_location', 'food_menus',
	 array( 
		'hierarchical' => true, // true = acts like categories false = acts like tags
		'label' => 'F&B Location', 
		'query_var' => true, 
		'rewrite' => true ,
		'show_admin_column' => true,
		'public' => true,
		'rewrite' => array( 'slug' => 'food-beverage-location' ),
		'_builtin' => true
	) );
	// register_taxonomy( 'fnb_location', 'food_menus',
	//  array( 
	// 	'hierarchical' => true, // true = acts like categories false = acts like tags
	// 	'label' => 'Food Type', 
	// 	'query_var' => true, 
	// 	'rewrite' => true ,
	// 	'show_admin_column' => true,
	// 	'public' => true,
	// 	'rewrite' => array( 'slug' => 'food-type' ),
	// 	'_builtin' => true
	// ) );
	
} // End build taxonomies

/**
 *  Create shortcode for River's Edge
 * 
    
 */
// 
function riversedge_shortcode( $atts ) {
	ob_start(); 
	$logo = get_field('logo', 'fnb_location_130');
	$termDesc = term_description(130);
	$i = 0;
		// build the query
		$query = new WP_Query( array( 
			'post_type'=>'food_menus',
			'posts_per_page' => -1,
			'orderby' => 'menu_order',
			'order' => 'ASC',
			'tax_query' => array(
				array(
					'taxonomy' => 'fnb_location', 
					'field' => 'slug',
					'terms' => array( 'rivers-edge' ) 
				)
			)
		) );
		if( $query->have_posts() ): ?>
			<section class="the-menu">
				<?php if($logo) { ?>
					<div class="fnb-logo">
						<img src="<?php echo $logo['url']; ?>">
					</div>
					<div class="clear"></div>
				<?php } ?>
				<div class="fnb-wrap">
			<?php while( $query->have_posts() ): $query->the_post(); $i++; 
				$title = get_the_title();
				//echo $title;
				if( $title == 'Page Break' ) { ?>
					<div class="pagebreak"> </div>
				<?php }

				?>
				<div class="fnb">
					<?php 
				// echo 'works';
				$introText = get_field('intro_text');
				?>
				<h2><?php the_title(); ?></h2>
				<?php
				if( $introText ) { ?>
					<div class="introtext"><?php echo $introText; ?></div>
				<?php } 
				//if( function_exists( get_field )) :
				 
					if( have_rows('menu_item') ) : ?>
						<div class="fnb-item">
							<?php while( have_rows('menu_item') ) : the_row();
								$name = get_sub_field('name');
								$price = get_sub_field('price');
								$description = get_sub_field('description');
								$note = get_sub_field('note');
								// echo '<pre>';
								// print_r($note);
								// echo '</pre>';
						?>
						<div class="item-row">
							<?php if( $note == 'vegetarian' ) { ?>
								<div class="single"><div class="vegetarian ficon">Vegetarian</div></div>
							<?php } ?>
							<?php if( $note == 'gluten' ) { ?>
								<div class="single"><div class="gluten ficon">Vegetarian</div></div>
							<?php } ?>
							<?php if( $note == 'both' ) { ?>
								<div class="both">
									<div class="gluten ficon">Gluten-Free</div>
									<div class="vegetarian ficon">Vegetarian</div>
								</div>
							<?php } ?>
							<h3><?php echo $name; ?></h3>
							<?php if( $price ) { ?><div class="price"><?php echo $price; ?></div><?php } ?>
							<?php if( $description ) { ?><div class="fdesc"><?php echo $description; ?></div><?php } ?>
						</div>
							<?php endwhile; ?>
						</div>
					<?php 
					endif; // end repeater loop ?>
					</div>

				<?php //endif; // need to look up future proofing "get_field" contant
			endwhile; ?>
			</div><!-- fnb wrap -->
			<div class="bottom-section">
				<div class="fnb-ww-logo">
					Whitewater Center
				</div>
				<div class="notes">
					<div class="noter">
						<div class="flexer">
							<div class="vegetarian"></div><div class="thenote">Vegetarian</div>
						</div>
					</div>
					<div class="noter">
						<div class="flexer">
							<div class="gluten"></div><div class="thenote">Gluten Free</div>
						</div>
					</div>
				</div>
				<div class="term-desc"><?php echo $termDesc; ?></div>
			</div>
			
			</section>
		<?php endif;
		wp_reset_query(); ?>
	
	<?php 
	$content = wpautop(trim($content));
	return $content;
	// Spit everythng out
	return ob_get_clean();
}

add_shortcode( 'rivers_edge_menu', 'riversedge_shortcode' );
